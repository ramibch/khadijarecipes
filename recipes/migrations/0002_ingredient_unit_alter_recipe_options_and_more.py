# Generated by Django 6.0a1 on 2025-10-18 20:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("recipes", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name_de",
                    models.CharField(max_length=100, verbose_name="Name (German)"),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Name (English)",
                    ),
                ),
                (
                    "name_fr",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Name (French)",
                    ),
                ),
                (
                    "name_es",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Name (Spanish)",
                    ),
                ),
                (
                    "name_it",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Name (Italian)",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, verbose_name="Description (German)"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, verbose_name="Description (English)"),
                ),
                (
                    "description_fr",
                    models.TextField(blank=True, verbose_name="Description (French)"),
                ),
                (
                    "description_es",
                    models.TextField(blank=True, verbose_name="Description (Spanish)"),
                ),
                (
                    "description_it",
                    models.TextField(blank=True, verbose_name="Description (Italian)"),
                ),
            ],
            options={
                "verbose_name": "Ingredient",
                "verbose_name_plural": "Ingredients",
                "ordering": ["name_de"],
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name_de",
                    models.CharField(max_length=50, verbose_name="Name (German)"),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Name (English)",
                    ),
                ),
                (
                    "name_fr",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Name (French)",
                    ),
                ),
                (
                    "name_es",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Name (Spanish)",
                    ),
                ),
                (
                    "name_it",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Name (Italian)",
                    ),
                ),
                ("abbreviation", models.CharField(blank=True, max_length=10)),
            ],
            options={
                "verbose_name": "Unit",
                "verbose_name_plural": "Units",
                "ordering": ["name_de"],
            },
        ),
        migrations.AlterModelOptions(
            name="recipe",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Recipe",
                "verbose_name_plural": "Recipes",
            },
        ),
        migrations.AddField(
            model_name="recipe",
            name="amazon_affiliate",
            field=models.BooleanField(default=False, verbose_name="Amazon Affiliate"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="category",
            field=models.CharField(
                choices=[
                    ("appetizer", "Appetizer"),
                    ("main", "Main Course"),
                    ("dessert", "Dessert"),
                    ("snack", "Snack"),
                    ("beverage", "Beverage"),
                    ("sauce", "Sauce"),
                    ("bread", "Bread"),
                ],
                default="main",
                max_length=20,
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="cook_time",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Cooking time in minutes",
                null=True,
                verbose_name="Cooking Time",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="cuisine",
            field=models.CharField(
                choices=[
                    ("german", "German"),
                    ("french", "French"),
                    ("italian", "Italian"),
                    ("turkish", "Turkish"),
                    ("indian", "Indian"),
                    ("spanish", "Spanish"),
                    ("international", "International"),
                ],
                default="international",
                max_length=20,
                verbose_name="Cuisine",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="date_published",
            field=models.DateField(
                blank=True, null=True, verbose_name="Date Published"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="description_de",
            field=models.TextField(blank=True, verbose_name="Description (German)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="description_en",
            field=models.TextField(blank=True, verbose_name="Description (English)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="description_es",
            field=models.TextField(blank=True, verbose_name="Description (Spanish)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="description_fr",
            field=models.TextField(blank=True, verbose_name="Description (French)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="description_it",
            field=models.TextField(blank=True, verbose_name="Description (Italian)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="difficulty",
            field=models.CharField(
                choices=[("easy", "Easy"), ("medium", "Medium"), ("hard", "Hard")],
                default="medium",
                max_length=10,
                verbose_name="Difficulty Level",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="introduction_de",
            field=models.TextField(blank=True, verbose_name="Introduction (German)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="introduction_en",
            field=models.TextField(blank=True, verbose_name="Introduction (English)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="introduction_es",
            field=models.TextField(blank=True, verbose_name="Introduction (Spanish)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="introduction_fr",
            field=models.TextField(blank=True, verbose_name="Introduction (French)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="introduction_it",
            field=models.TextField(blank=True, verbose_name="Introduction (Italian)"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="is_published",
            field=models.BooleanField(default=False, verbose_name="Is Published"),
        ),
        migrations.AddField(
            model_name="recipe",
            name="main_image",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="recipes/main/",
                verbose_name="Main Image",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="meta_description_de",
            field=models.TextField(
                blank=True, verbose_name="Meta Description (German)"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="meta_description_en",
            field=models.TextField(
                blank=True, verbose_name="Meta Description (English)"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="meta_description_es",
            field=models.TextField(
                blank=True, verbose_name="Meta Description (Spanish)"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="meta_description_fr",
            field=models.TextField(
                blank=True, verbose_name="Meta Description (French)"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="meta_description_it",
            field=models.TextField(
                blank=True, verbose_name="Meta Description (Italian)"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="prep_time",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Preparation time in minutes",
                null=True,
                verbose_name="Preparation Time",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="promote_in_telegram",
            field=models.BooleanField(
                default=False, verbose_name="Promote in Telegram"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="rest_time",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Resting time in minutes",
                null=True,
                verbose_name="Resting Time",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="servings",
            field=models.PositiveIntegerField(default=1, verbose_name="Servings"),
        ),
        migrations.CreateModel(
            name="NutritionInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "calories",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Calories per serving",
                        null=True,
                        verbose_name="Calories",
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="g per serving",
                        max_digits=6,
                        null=True,
                        verbose_name="Protein",
                    ),
                ),
                (
                    "carbohydrates",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="g per serving",
                        max_digits=6,
                        null=True,
                        verbose_name="Carbohydrates",
                    ),
                ),
                (
                    "fat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="g per serving",
                        max_digits=6,
                        null=True,
                        verbose_name="Fat",
                    ),
                ),
                (
                    "fiber",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="g per serving",
                        max_digits=6,
                        null=True,
                        verbose_name="Fiber",
                    ),
                ),
                (
                    "sugar",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="g per serving",
                        max_digits=6,
                        null=True,
                        verbose_name="Sugar",
                    ),
                ),
                (
                    "recipe",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nutrition",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nutrition Information",
                "verbose_name_plural": "Nutrition Information",
            },
        ),
        migrations.CreateModel(
            name="RecipeImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ImageField(upload_to="recipe_images/", verbose_name="Image"),
                ),
                (
                    "caption_de",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption (German)"
                    ),
                ),
                (
                    "caption_en",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption (English)"
                    ),
                ),
                (
                    "caption_fr",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption (French)"
                    ),
                ),
                (
                    "caption_es",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption (Spanish)"
                    ),
                ),
                (
                    "caption_it",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caption (Italian)"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Order")),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe Image",
                "verbose_name_plural": "Recipe Images",
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="RecipeNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("note_de", models.TextField(verbose_name="Note (German)")),
                (
                    "note_en",
                    models.TextField(blank=True, verbose_name="Note (English)"),
                ),
                ("note_fr", models.TextField(blank=True, verbose_name="Note (French)")),
                (
                    "note_es",
                    models.TextField(blank=True, verbose_name="Note (Spanish)"),
                ),
                (
                    "note_it",
                    models.TextField(blank=True, verbose_name="Note (Italian)"),
                ),
                (
                    "note_type",
                    models.CharField(
                        choices=[
                            ("tip", "Tip"),
                            ("variation", "Variation"),
                            ("warning", "Warning"),
                            ("info", "Information"),
                        ],
                        default="tip",
                        max_length=20,
                        verbose_name="Note Type",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Order")),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe Note",
                "verbose_name_plural": "Recipe Notes",
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="RecipeStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "step_number",
                    models.PositiveIntegerField(verbose_name="Step Number"),
                ),
                (
                    "instruction_de",
                    models.TextField(verbose_name="Instruction (German)"),
                ),
                (
                    "instruction_en",
                    models.TextField(blank=True, verbose_name="Instruction (English)"),
                ),
                (
                    "instruction_fr",
                    models.TextField(blank=True, verbose_name="Instruction (French)"),
                ),
                (
                    "instruction_es",
                    models.TextField(blank=True, verbose_name="Instruction (Spanish)"),
                ),
                (
                    "instruction_it",
                    models.TextField(blank=True, verbose_name="Instruction (Italian)"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="recipe_steps/",
                        verbose_name="Step Image",
                    ),
                ),
                (
                    "timer_duration",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Timer duration in seconds",
                        null=True,
                        verbose_name="Timer Duration",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe Step",
                "verbose_name_plural": "Recipe Steps",
                "ordering": ["step_number"],
                "unique_together": {("recipe", "step_number")},
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "unit_text",
                    models.CharField(
                        blank=True,
                        help_text="Custom unit if not in predefined units",
                        max_length=50,
                        verbose_name="Custom Unit",
                    ),
                ),
                (
                    "notes_de",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes like 'chopped', 'melted', etc.",
                        max_length=100,
                        verbose_name="Notes (German)",
                    ),
                ),
                (
                    "notes_en",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes like 'chopped', 'melted', etc.",
                        max_length=100,
                        verbose_name="Notes (English)",
                    ),
                ),
                (
                    "notes_fr",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes like 'chopped', 'melted', etc.",
                        max_length=100,
                        verbose_name="Notes (French)",
                    ),
                ),
                (
                    "notes_es",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes like 'chopped', 'melted', etc.",
                        max_length=100,
                        verbose_name="Notes (Spanish)",
                    ),
                ),
                (
                    "notes_it",
                    models.CharField(
                        blank=True,
                        help_text="Additional notes like 'chopped', 'melted', etc.",
                        max_length=100,
                        verbose_name="Notes (Italian)",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Order")),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recipes.ingredient",
                        verbose_name="Ingredient",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredients",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="recipes.unit",
                        verbose_name="Unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe Ingredient",
                "verbose_name_plural": "Recipe Ingredients",
                "ordering": ["order", "id"],
                "unique_together": {("recipe", "ingredient")},
            },
        ),
    ]
